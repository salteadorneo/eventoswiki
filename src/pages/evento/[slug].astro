---
import EventLayout from '@/layouts/event-layout.astro'
import { EventTabs } from '@event/client/ui/components/event-tabs/event-tabs.component'
import { EventLocator } from '@event/server/di/event.locator'
import { Event } from '@event/server/domain/event'
import EventAddress from '@event/server/ui/components/event-address/event-address.astro'
import EventContent from '@event/server/ui/components/event-content/event-content.astro'
import { EventTab } from '@event/server/ui/types/event-tabs'
import { Urls } from '@ui/urls/urls'

export const prerender = false

let event: Event | null = null
let tab: EventTab = EventTab.Information
try {
  tab = (Astro.url.searchParams.get('tab') as EventTab) || EventTab.Information
  const getEventQuery = EventLocator.getEventQuery()
  const slug = Astro.params.slug

  if (slug === undefined) {
    Astro.redirect(Urls.HOME)
    return
  }

  event = await getEventQuery.execute({ slug })
} catch (error) {
  console.error(error)
}
---

{
  event === null ? (
    <h1>Event not found</h1>
  ) : (
    <EventLayout event={event}>
      <EventTabs tab={tab} client:load />
      {tab === EventTab.Information && <EventContent event={event} />}
      {tab === EventTab.Location && <EventAddress event={event} />}
    </EventLayout>
  )
}
